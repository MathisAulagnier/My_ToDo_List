{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/PunctualTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PunctualTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PunctualTask = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    // Charger les tâches ponctuelles à partir du serveur\n    fetch('http://localhost:3001/tasks').then(response => response.json()).then(data => {\n      setTasks(data || []); // Charger les tâches ou un tableau vide si aucune tâche n'existe\n    }).catch(error => console.error('Erreur de chargement des tâches ponctuelles :', error));\n  }, []);\n  const handleTaskCompletion = task => {\n    // Supprimer la tâche accomplie de la liste des tâches ponctuelles\n    const updatedTasks = tasks.filter(t => t.id !== task.id);\n    setTasks(updatedTasks);\n\n    // Mettre à jour punctualTasks.json avec les tâches restantes\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(updatedTasks)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n      return response.text();\n    }).then(() => console.log('Mise à jour des tâches ponctuelles réussie')).catch(error => console.error('Erreur lors de la mise à jour des tâches ponctuelles :', error));\n\n    // Enregistrer la tâche accomplie dans extraTaskTracker.json avec la date actuelle\n    const currentDate = new Date().toISOString().split('T')[0];\n    fetch('http://localhost:3001/api/extra-tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Date: currentDate,\n        ExtraTasks: [{\n          ...task,\n          completed: true,\n          importance: task.importance || 'moyen'\n        }]\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to log completed task');\n      }\n      return response.text();\n    }).then(() => console.log('Tâche accomplie enregistrée avec succès')).catch(error => console.error('Erreur lors de l\\'enregistrement de la tâche accomplie :', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"punctual-task neon-green\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Extra Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-p-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleTaskCompletion(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), task.text]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune t\\xE2che ponctuelle pour aujourd'hui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(PunctualTask, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = PunctualTask;\nexport default PunctualTask;\nvar _c;\n$RefreshReg$(_c, \"PunctualTask\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PunctualTask","_s","tasks","setTasks","fetch","then","response","json","data","catch","error","console","handleTaskCompletion","task","updatedTasks","filter","t","id","method","headers","body","JSON","stringify","ok","Error","text","log","currentDate","Date","toISOString","split","ExtraTasks","completed","importance","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","type","onChange","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/PunctualTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PunctualTask.css';\n\nconst PunctualTask = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    // Charger les tâches ponctuelles à partir du serveur\n    fetch('http://localhost:3001/tasks')\n      .then((response) => response.json())\n      .then((data) => {\n        setTasks(data || []); // Charger les tâches ou un tableau vide si aucune tâche n'existe\n      })\n      .catch((error) => console.error('Erreur de chargement des tâches ponctuelles :', error));\n  }, []);\n\n  const handleTaskCompletion = (task) => {\n    // Supprimer la tâche accomplie de la liste des tâches ponctuelles\n    const updatedTasks = tasks.filter((t) => t.id !== task.id);\n    setTasks(updatedTasks);\n\n    // Mettre à jour punctualTasks.json avec les tâches restantes\n    fetch('http://localhost:3001/tasks', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(updatedTasks),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n      return response.text();\n    })\n    .then(() => console.log('Mise à jour des tâches ponctuelles réussie'))\n    .catch((error) => console.error('Erreur lors de la mise à jour des tâches ponctuelles :', error));\n\n    // Enregistrer la tâche accomplie dans extraTaskTracker.json avec la date actuelle\n    const currentDate = new Date().toISOString().split('T')[0];\n    fetch('http://localhost:3001/api/extra-tasks', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        Date: currentDate,\n        ExtraTasks: [{ ...task, completed: true, importance: task.importance || 'moyen' }],\n      }),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to log completed task');\n      }\n      return response.text();\n    })\n    .then(() => console.log('Tâche accomplie enregistrée avec succès'))\n    .catch((error) => console.error('Erreur lors de l\\'enregistrement de la tâche accomplie :', error));\n  };\n\n  return (\n    <div className=\"punctual-task neon-green\">\n      <h2>Extra Tasks</h2>\n      {tasks.length > 0 ? tasks.map((task) => (\n        <div key={task.id} className=\"task-p-item\">\n          <input\n            type=\"checkbox\"\n            onChange={() => handleTaskCompletion(task)}\n          />\n          {task.text}\n        </div>\n      )) : <p>Aucune tâche ponctuelle pour aujourd'hui</p>}\n    </div>\n  );\n};\n\nexport default PunctualTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}