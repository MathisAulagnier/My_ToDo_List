{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepTracker = () => {\n  _s();\n  const [sleepQuality, setSleepQuality] = useState([{\n    id: 1,\n    text: 'Excellent',\n    selected: false\n  }, {\n    id: 2,\n    text: 'Bien',\n    selected: false\n  }, {\n    id: 3,\n    text: 'Normal',\n    selected: false\n  }, {\n    id: 4,\n    text: 'Trop chaud/froid',\n    selected: false\n  }, {\n    id: 5,\n    text: 'Pas assez',\n    selected: false\n  }, {\n    id: 6,\n    text: 'Mal',\n    selected: false\n  }, {\n    id: 7,\n    text: 'Nuit blanche',\n    selected: false\n  }]);\n  const [selectedSleep, setSelectedSleep] = useState(null);\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const sleepScores = {\n    'Excellent': 9,\n    'Bien': 7,\n    'Normal': 5,\n    'Trop chaud/froid': 4,\n    'Pas assez': 3,\n    'Mal': 2,\n    'Nuit blanche': 0\n  };\n  const formatDate = date => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n    return `${year}-${month}-${day}`; // Format YYYY-MM-DD\n  };\n  const selectSleepQuality = useCallback(id => {\n    const selected = sleepQuality.find(sleep => sleep.id === id).text;\n    const updatedSleepQuality = sleepQuality.map(sleep => sleep.id === id ? {\n      ...sleep,\n      selected: true\n    } : {\n      ...sleep,\n      selected: false\n    });\n    setSleepQuality(updatedSleepQuality);\n    setSelectedSleep(selected);\n  }, [sleepQuality]);\n  const validateSleepQuality = async () => {\n    if (!selectedSleep) return; // Si aucune qualité de sommeil n'est sélectionnée, ne rien faire.\n\n    const currentDate = formatDate(new Date());\n    const score = sleepScores[selectedSleep];\n    try {\n      const response = await fetch('http://localhost:3001/api/sleep', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Sleep: selectedSleep,\n          Score: score\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du SleepTracker');\n      }\n      alert('SleepTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du SleepTracker:', error);\n      alert('Erreur lors de la mise à jour du SleepTracker');\n    }\n  };\n  useEffect(() => {\n    const fetchSleepData = async () => {\n      const currentDate = formatDate(new Date());\n      try {\n        const response = await fetch('http://localhost:3001/api/sleep');\n        const data = await response.json();\n        const existingSleep = data.find(sleep => sleep.Date === currentDate);\n        if (existingSleep) {\n          const sleepId = sleepQuality.find(sleep => sleep.text === existingSleep.Sleep).id;\n          selectSleepQuality(sleepId);\n        } else {\n          const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Normal').id;\n          selectSleepQuality(defaultSleepId);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données de sommeil:', error);\n        const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Normal').id;\n        selectSleepQuality(defaultSleepId);\n      } finally {\n        setDataLoaded(true);\n      }\n    };\n    if (!dataLoaded) {\n      fetchSleepData();\n    }\n  }, [sleepQuality, selectSleepQuality, dataLoaded]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sleep Quality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), sleepQuality.map(sleep => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: sleep.selected,\n        onChange: () => selectSleepQuality(sleep.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this), sleep.text]\n    }, sleep.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateSleepQuality,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepTracker, \"y9PpcdLPLMJS6C8KRJD4jPFHvus=\");\n_c = SleepTracker;\nexport default SleepTracker;\nvar _c;\n$RefreshReg$(_c, \"SleepTracker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","SleepTracker","_s","sleepQuality","setSleepQuality","id","text","selected","selectedSleep","setSelectedSleep","dataLoaded","setDataLoaded","sleepScores","formatDate","date","d","Date","day","getDate","month","getMonth","year","getFullYear","selectSleepQuality","find","sleep","updatedSleepQuality","map","validateSleepQuality","currentDate","score","response","fetch","method","headers","body","JSON","stringify","Sleep","Score","ok","Error","alert","error","console","fetchSleepData","data","json","existingSleep","sleepId","defaultSleepId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\n\nconst SleepTracker = () => {\n  const [sleepQuality, setSleepQuality] = useState([\n    { id: 1, text: 'Excellent', selected: false },\n    { id: 2, text: 'Bien', selected: false },\n    { id: 3, text: 'Normal', selected: false },\n    { id: 4, text: 'Trop chaud/froid', selected: false },\n    { id: 5, text: 'Pas assez', selected: false },\n    { id: 6, text: 'Mal', selected: false },\n    { id: 7, text: 'Nuit blanche', selected: false },\n  ]);\n\n  const [selectedSleep, setSelectedSleep] = useState(null);\n  const [dataLoaded, setDataLoaded] = useState(false);\n\n  const sleepScores = {\n    'Excellent': 9,\n    'Bien': 7,\n    'Normal': 5,\n    'Trop chaud/froid': 4,\n    'Pas assez': 3,\n    'Mal': 2,\n    'Nuit blanche': 0,\n  };\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n\n    return `${year}-${month}-${day}`; // Format YYYY-MM-DD\n  };\n\n  const selectSleepQuality = useCallback((id) => {\n    const selected = sleepQuality.find(sleep => sleep.id === id).text;\n    const updatedSleepQuality = sleepQuality.map((sleep) =>\n      sleep.id === id\n        ? { ...sleep, selected: true }\n        : { ...sleep, selected: false }\n    );\n    setSleepQuality(updatedSleepQuality);\n    setSelectedSleep(selected);\n  }, [sleepQuality]);\n\n  const validateSleepQuality = async () => {\n    if (!selectedSleep) return; // Si aucune qualité de sommeil n'est sélectionnée, ne rien faire.\n\n    const currentDate = formatDate(new Date());\n    const score = sleepScores[selectedSleep];\n\n    try {\n      const response = await fetch('http://localhost:3001/api/sleep', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Sleep: selectedSleep,\n          Score: score,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du SleepTracker');\n      }\n\n      alert('SleepTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du SleepTracker:', error);\n      alert('Erreur lors de la mise à jour du SleepTracker');\n    }\n  };\n\n  useEffect(() => {\n    const fetchSleepData = async () => {\n      const currentDate = formatDate(new Date());\n\n      try {\n        const response = await fetch('http://localhost:3001/api/sleep');\n        const data = await response.json();\n\n        const existingSleep = data.find(sleep => sleep.Date === currentDate);\n\n        if (existingSleep) {\n          const sleepId = sleepQuality.find(sleep => sleep.text === existingSleep.Sleep).id;\n          selectSleepQuality(sleepId);\n        } else {\n          const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Normal').id;\n          selectSleepQuality(defaultSleepId);\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des données de sommeil:', error);\n        const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Normal').id;\n        selectSleepQuality(defaultSleepId);\n      } finally {\n        setDataLoaded(true);\n      }\n    };\n\n    if (!dataLoaded) {\n      fetchSleepData();\n    }\n  }, [sleepQuality, selectSleepQuality, dataLoaded]);\n\n  return (\n    <div className=\"sleep-tracker\">\n      <h2>Sleep Quality</h2>\n      {sleepQuality.map((sleep) => (\n        <div key={sleep.id} className=\"sleep-item\">\n          <input\n            type=\"checkbox\"\n            checked={sleep.selected}\n            onChange={() => selectSleepQuality(sleep.id)}\n          />\n          {sleep.text}\n        </div>\n      ))}\n      <button onClick={validateSleepQuality}>Valider</button>\n    </div>\n  );\n};\n\nexport default SleepTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}