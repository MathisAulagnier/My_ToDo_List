{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepTracker = () => {\n  _s();\n  const [sleepQuality, setSleepQuality] = useState([{\n    id: 1,\n    text: 'Dormir comme un bébé',\n    selected: false\n  }, {\n    id: 2,\n    text: 'Sommeil profond',\n    selected: false\n  }, {\n    id: 3,\n    text: 'Sommeil fragmenté',\n    selected: false\n  }, {\n    id: 4,\n    text: 'Sommeil anxieux',\n    selected: false\n  }, {\n    id: 5,\n    text: 'Insomnie',\n    selected: false\n  }, {\n    id: 6,\n    text: 'Sommeil difficile',\n    selected: false\n  }, {\n    id: 7,\n    text: 'Nuit blanche',\n    selected: false\n  }, {\n    id: 8,\n    text: 'Sommeil agité',\n    selected: false\n  }]);\n  const [selectedSleep, setSelectedSleep] = useState(null);\n  const formatDate = date => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n    return `${year}-${month}-${day}`; // Format YYYY-MM-DD\n  };\n  const selectSleepQuality = useCallback(id => {\n    const selected = sleepQuality.find(sleep => sleep.id === id).text;\n    const updatedSleepQuality = sleepQuality.map(sleep => sleep.id === id ? {\n      ...sleep,\n      selected: true\n    } : {\n      ...sleep,\n      selected: false\n    });\n    setSleepQuality(updatedSleepQuality);\n    setSelectedSleep(selected);\n  }, [sleepQuality]);\n  const validateSleepQuality = async () => {\n    if (!selectedSleep) return; // Si aucune qualité de sommeil n'est sélectionnée, ne rien faire.\n\n    const currentDate = formatDate(new Date());\n    try {\n      const response = await fetch('http://localhost:3001/api/sleep', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Sleep: selectedSleep\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du SleepTracker');\n      }\n      alert('SleepTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du SleepTracker:', error);\n      alert('Erreur lors de la mise à jour du SleepTracker');\n    }\n  };\n  useEffect(() => {\n    const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Sommeil fragmenté').id;\n    const hasSelectedSleep = sleepQuality.some(sleep => sleep.selected);\n    if (!hasSelectedSleep) {\n      selectSleepQuality(defaultSleepId);\n    }\n  }, [sleepQuality, selectSleepQuality]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sleep Quality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), sleepQuality.map(sleep => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: sleep.selected,\n        onChange: () => selectSleepQuality(sleep.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), sleep.text]\n    }, sleep.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateSleepQuality,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepTracker, \"//BJCELKro2Vbkvh//mz2ly7kK0=\");\n_c = SleepTracker;\nexport default SleepTracker;\nvar _c;\n$RefreshReg$(_c, \"SleepTracker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","SleepTracker","_s","sleepQuality","setSleepQuality","id","text","selected","selectedSleep","setSelectedSleep","formatDate","date","d","Date","day","getDate","month","getMonth","year","getFullYear","selectSleepQuality","find","sleep","updatedSleepQuality","map","validateSleepQuality","currentDate","response","fetch","method","headers","body","JSON","stringify","Sleep","ok","Error","alert","error","console","defaultSleepId","hasSelectedSleep","some","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\n\nconst SleepTracker = () => {\n  const [sleepQuality, setSleepQuality] = useState([\n    { id: 1, text: 'Dormir comme un bébé', selected: false },\n    { id: 2, text: 'Sommeil profond', selected: false },\n    { id: 3, text: 'Sommeil fragmenté', selected: false },\n    { id: 4, text: 'Sommeil anxieux', selected: false },\n    { id: 5, text: 'Insomnie', selected: false },\n    { id: 6, text: 'Sommeil difficile', selected: false },\n    { id: 7, text: 'Nuit blanche', selected: false },\n    { id: 8, text: 'Sommeil agité', selected: false },\n  ]);\n\n  const [selectedSleep, setSelectedSleep] = useState(null);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n\n    return `${year}-${month}-${day}`; // Format YYYY-MM-DD\n  };\n\n  const selectSleepQuality = useCallback((id) => {\n    const selected = sleepQuality.find(sleep => sleep.id === id).text;\n    const updatedSleepQuality = sleepQuality.map((sleep) =>\n      sleep.id === id\n        ? { ...sleep, selected: true }\n        : { ...sleep, selected: false }\n    );\n    setSleepQuality(updatedSleepQuality);\n    setSelectedSleep(selected);\n  }, [sleepQuality]);\n\n  const validateSleepQuality = async () => {\n    if (!selectedSleep) return; // Si aucune qualité de sommeil n'est sélectionnée, ne rien faire.\n\n    const currentDate = formatDate(new Date());\n\n    try {\n      const response = await fetch('http://localhost:3001/api/sleep', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Sleep: selectedSleep,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du SleepTracker');\n      }\n\n      alert('SleepTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du SleepTracker:', error);\n      alert('Erreur lors de la mise à jour du SleepTracker');\n    }\n  };\n\n  useEffect(() => {\n    const defaultSleepId = sleepQuality.find(sleep => sleep.text === 'Sommeil fragmenté').id;\n    const hasSelectedSleep = sleepQuality.some(sleep => sleep.selected);\n    if (!hasSelectedSleep) {\n      selectSleepQuality(defaultSleepId);\n    }\n  }, [sleepQuality, selectSleepQuality]);\n\n  return (\n    <div className=\"sleep-tracker\">\n      <h2>Sleep Quality</h2>\n      {sleepQuality.map((sleep) => (\n        <div key={sleep.id} className=\"sleep-item\">\n          <input\n            type=\"checkbox\"\n            checked={sleep.selected}\n            onChange={() => selectSleepQuality(sleep.id)}\n          />\n          {sleep.text}\n        </div>\n      ))}\n      <button onClick={validateSleepQuality}>Valider</button>\n    </div>\n  );\n};\n\nexport default SleepTracker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,CAC/C;IAAES,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAM,CAAC,CAClD,CAAC;EAEF,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExD,MAAMc,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACxB,IAAIG,GAAG,GAAGF,CAAC,CAACG,OAAO,CAAC,CAAC;IACrB,IAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC5B,MAAMC,IAAI,GAAGN,CAAC,CAACO,WAAW,CAAC,CAAC;IAE5B,IAAIL,GAAG,GAAG,EAAE,EAAEA,GAAG,GAAG,GAAG,GAAGA,GAAG;IAC7B,IAAIE,KAAK,GAAG,EAAE,EAAEA,KAAK,GAAG,GAAG,GAAGA,KAAK;IAEnC,OAAO,GAAGE,IAAI,IAAIF,KAAK,IAAIF,GAAG,EAAE,CAAC,CAAC;EACpC,CAAC;EAED,MAAMM,kBAAkB,GAAGtB,WAAW,CAAEO,EAAE,IAAK;IAC7C,MAAME,QAAQ,GAAGJ,YAAY,CAACkB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACjB,EAAE,KAAKA,EAAE,CAAC,CAACC,IAAI;IACjE,MAAMiB,mBAAmB,GAAGpB,YAAY,CAACqB,GAAG,CAAEF,KAAK,IACjDA,KAAK,CAACjB,EAAE,KAAKA,EAAE,GACX;MAAE,GAAGiB,KAAK;MAAEf,QAAQ,EAAE;IAAK,CAAC,GAC5B;MAAE,GAAGe,KAAK;MAAEf,QAAQ,EAAE;IAAM,CAClC,CAAC;IACDH,eAAe,CAACmB,mBAAmB,CAAC;IACpCd,gBAAgB,CAACF,QAAQ,CAAC;EAC5B,CAAC,EAAE,CAACJ,YAAY,CAAC,CAAC;EAElB,MAAMsB,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI,CAACjB,aAAa,EAAE,OAAO,CAAC;;IAE5B,MAAMkB,WAAW,GAAGhB,UAAU,CAAC,IAAIG,IAAI,CAAC,CAAC,CAAC;IAE1C,IAAI;MACF,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBpB,IAAI,EAAEa,WAAW;UACjBQ,KAAK,EAAE1B;QACT,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACmB,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;MAClE;MAEAC,KAAK,CAAC,qCAAqC,CAAC;IAC9C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gDAAgD,EAAEA,KAAK,CAAC;MACtED,KAAK,CAAC,+CAA+C,CAAC;IACxD;EACF,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACd,MAAM2C,cAAc,GAAGrC,YAAY,CAACkB,IAAI,CAACC,KAAK,IAAIA,KAAK,CAAChB,IAAI,KAAK,mBAAmB,CAAC,CAACD,EAAE;IACxF,MAAMoC,gBAAgB,GAAGtC,YAAY,CAACuC,IAAI,CAACpB,KAAK,IAAIA,KAAK,CAACf,QAAQ,CAAC;IACnE,IAAI,CAACkC,gBAAgB,EAAE;MACrBrB,kBAAkB,CAACoB,cAAc,CAAC;IACpC;EACF,CAAC,EAAE,CAACrC,YAAY,EAAEiB,kBAAkB,CAAC,CAAC;EAEtC,oBACEpB,OAAA;IAAK2C,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5C,OAAA;MAAA4C,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrB7C,YAAY,CAACqB,GAAG,CAAEF,KAAK,iBACtBtB,OAAA;MAAoB2C,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACxC5C,OAAA;QACEiD,IAAI,EAAC,UAAU;QACfC,OAAO,EAAE5B,KAAK,CAACf,QAAS;QACxB4C,QAAQ,EAAEA,CAAA,KAAM/B,kBAAkB,CAACE,KAAK,CAACjB,EAAE;MAAE;QAAAwC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,EACD1B,KAAK,CAAChB,IAAI;IAAA,GANHgB,KAAK,CAACjB,EAAE;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACN,CAAC,eACFhD,OAAA;MAAQoD,OAAO,EAAE3B,oBAAqB;MAAAmB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAzFID,YAAY;AAAAoD,EAAA,GAAZpD,YAAY;AA2FlB,eAAeA,YAAY;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}