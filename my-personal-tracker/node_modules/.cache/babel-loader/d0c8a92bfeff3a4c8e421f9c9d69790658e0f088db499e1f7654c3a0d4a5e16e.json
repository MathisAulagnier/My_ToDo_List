{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n// import './ProductivityChart.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductivityChart = () => {\n  _s();\n  const [scores, setScores] = useState([]);\n  useEffect(() => {\n    const fetchScores = async () => {\n      const [moodResponse, sleepResponse, dailyTasksResponse, extraTasksResponse] = await Promise.all([fetch('http://localhost:3001/api/moods'), fetch('http://localhost:3001/api/sleep'), fetch('http://localhost:3001/api/daily-tasks'), fetch('http://localhost:3001/api/extra-tasks')]);\n      const [moodData, sleepData, dailyTasksData, extraTasksData] = await Promise.all([moodResponse.json(), sleepResponse.json(), dailyTasksResponse.json(), extraTasksResponse.json()]);\n      const today = new Date();\n      const past30Days = Array.from({\n        length: 30\n      }, (_, i) => {\n        const date = new Date(today);\n        date.setDate(today.getDate() - i);\n        return date.toISOString().split('T')[0];\n      });\n      const scores = past30Days.map(date => {\n        var _moodData$find, _sleepData$find, _dailyTasksData$find, _extraTasksData$find;\n        const mood = ((_moodData$find = moodData.find(entry => entry.Date === date)) === null || _moodData$find === void 0 ? void 0 : _moodData$find.Score) || 0;\n        const sleep = ((_sleepData$find = sleepData.find(entry => entry.Date === date)) === null || _sleepData$find === void 0 ? void 0 : _sleepData$find.Score) || 0;\n        const dailyTasks = ((_dailyTasksData$find = dailyTasksData.find(entry => entry.Date === date)) === null || _dailyTasksData$find === void 0 ? void 0 : _dailyTasksData$find.Score) || 0;\n        const extraTasks = ((_extraTasksData$find = extraTasksData.find(entry => entry.Date === date)) === null || _extraTasksData$find === void 0 ? void 0 : _extraTasksData$find.Score) || 0;\n        return {\n          date,\n          mood,\n          sleep,\n          dailyTasks,\n          extraTasks,\n          total: mood + sleep + dailyTasks + extraTasks\n        };\n      });\n      setScores(scores.reverse()); // Pour afficher les dates dans l'ordre chronologique\n    };\n    fetchScores();\n  }, []);\n  const chartData = {\n    labels: scores.map(score => score.date),\n    datasets: [{\n      label: 'Mood',\n      data: scores.map(score => score.mood),\n      borderColor: 'rgba(75, 192, 192, 1)',\n      fill: false\n    }, {\n      label: 'Sleep',\n      data: scores.map(score => score.sleep),\n      borderColor: 'rgba(153, 102, 255, 1)',\n      fill: false\n    }, {\n      label: 'Daily Tasks',\n      data: scores.map(score => score.dailyTasks),\n      borderColor: 'rgba(255, 159, 64, 1)',\n      fill: false\n    }, {\n      label: 'Extra Tasks',\n      data: scores.map(score => score.extraTasks),\n      borderColor: 'rgba(255, 99, 132, 1)',\n      fill: false\n    }, {\n      label: 'Total Score',\n      data: scores.map(score => score.total),\n      borderColor: 'rgba(54, 162, 235, 1)',\n      fill: false\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-chart\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productivity Chart (Last 30 Days)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityChart, \"Yyk7VGwHemHEYHhwndV2GCDMHOA=\");\n_c = ProductivityChart;\nexport default ProductivityChart;\nvar _c;\n$RefreshReg$(_c, \"ProductivityChart\");","map":{"version":3,"names":["React","useState","useEffect","Line","jsxDEV","_jsxDEV","ProductivityChart","_s","scores","setScores","fetchScores","moodResponse","sleepResponse","dailyTasksResponse","extraTasksResponse","Promise","all","fetch","moodData","sleepData","dailyTasksData","extraTasksData","json","today","Date","past30Days","Array","from","length","_","i","date","setDate","getDate","toISOString","split","map","_moodData$find","_sleepData$find","_dailyTasksData$find","_extraTasksData$find","mood","find","entry","Score","sleep","dailyTasks","extraTasks","total","reverse","chartData","labels","score","datasets","label","data","borderColor","fill","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityChart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\n// import './ProductivityChart.css';\n\nconst ProductivityChart = () => {\n  const [scores, setScores] = useState([]);\n\n  useEffect(() => {\n    const fetchScores = async () => {\n      const [moodResponse, sleepResponse, dailyTasksResponse, extraTasksResponse] = await Promise.all([\n        fetch('http://localhost:3001/api/moods'),\n        fetch('http://localhost:3001/api/sleep'),\n        fetch('http://localhost:3001/api/daily-tasks'),\n        fetch('http://localhost:3001/api/extra-tasks'),\n      ]);\n\n      const [moodData, sleepData, dailyTasksData, extraTasksData] = await Promise.all([\n        moodResponse.json(),\n        sleepResponse.json(),\n        dailyTasksResponse.json(),\n        extraTasksResponse.json(),\n      ]);\n\n      const today = new Date();\n      const past30Days = Array.from({ length: 30 }, (_, i) => {\n        const date = new Date(today);\n        date.setDate(today.getDate() - i);\n        return date.toISOString().split('T')[0];\n      });\n\n      const scores = past30Days.map(date => {\n        const mood = moodData.find(entry => entry.Date === date)?.Score || 0;\n        const sleep = sleepData.find(entry => entry.Date === date)?.Score || 0;\n        const dailyTasks = dailyTasksData.find(entry => entry.Date === date)?.Score || 0;\n        const extraTasks = extraTasksData.find(entry => entry.Date === date)?.Score || 0;\n        return {\n          date,\n          mood,\n          sleep,\n          dailyTasks,\n          extraTasks,\n          total: mood + sleep + dailyTasks + extraTasks,\n        };\n      });\n\n      setScores(scores.reverse()); // Pour afficher les dates dans l'ordre chronologique\n    };\n\n    fetchScores();\n  }, []);\n\n  const chartData = {\n    labels: scores.map(score => score.date),\n    datasets: [\n      {\n        label: 'Mood',\n        data: scores.map(score => score.mood),\n        borderColor: 'rgba(75, 192, 192, 1)',\n        fill: false,\n      },\n      {\n        label: 'Sleep',\n        data: scores.map(score => score.sleep),\n        borderColor: 'rgba(153, 102, 255, 1)',\n        fill: false,\n      },\n      {\n        label: 'Daily Tasks',\n        data: scores.map(score => score.dailyTasks),\n        borderColor: 'rgba(255, 159, 64, 1)',\n        fill: false,\n      },\n      {\n        label: 'Extra Tasks',\n        data: scores.map(score => score.extraTasks),\n        borderColor: 'rgba(255, 99, 132, 1)',\n        fill: false,\n      },\n      {\n        label: 'Total Score',\n        data: scores.map(score => score.total),\n        borderColor: 'rgba(54, 162, 235, 1)',\n        fill: false,\n      }\n    ],\n  };\n\n  return (\n    <div className=\"productivity-chart\">\n      <h2>Productivity Chart (Last 30 Days)</h2>\n      <Line data={chartData} />\n    </div>\n  );\n};\n\nexport default ProductivityChart;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}