{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductivityScore = () => {\n  _s();\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  useEffect(() => {\n    const calculateTotalScore = () => {\n      const total = moodScore + sleepScore + dailyTaskScore + extraTaskScore;\n      setTotalScore(total);\n\n      // Enregistrer le score dans scoretracker.json\n      const saveScore = async () => {\n        await fetch('http://localhost:3001/api/scores', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            Date: new Date().toISOString().split('T')[0],\n            Mood: moodScore,\n            Sleep: sleepScore,\n            TachesQuotidiennes: dailyTaskScore,\n            ExtraTaches: extraTaskScore\n          })\n        });\n      };\n      saveScore();\n    };\n    calculateTotalScore();\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productivity Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-ticket\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mood : \", moodScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sleep : \", sleepScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Taches quotidiennes : \", dailyTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Extra taches : \", extraTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score de productivit\\xE9 : \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityScore, \"gDujFrGgt4xgjuuUoRrc/DR1JyM=\");\n_c = ProductivityScore;\nexport default ProductivityScore;\nvar _c;\n$RefreshReg$(_c, \"ProductivityScore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductivityScore","_s","moodScore","setMoodScore","sleepScore","setSleepScore","dailyTaskScore","setDailyTaskScore","extraTaskScore","setExtraTaskScore","totalScore","setTotalScore","calculateTotalScore","total","saveScore","fetch","method","headers","body","JSON","stringify","Date","toISOString","split","Mood","Sleep","TachesQuotidiennes","ExtraTaches","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\n\nconst ProductivityScore = () => {\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n\n  useEffect(() => {\n    const calculateTotalScore = () => {\n      const total = moodScore + sleepScore + dailyTaskScore + extraTaskScore;\n      setTotalScore(total);\n  \n      // Enregistrer le score dans scoretracker.json\n      const saveScore = async () => {\n        await fetch('http://localhost:3001/api/scores', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            Date: new Date().toISOString().split('T')[0],\n            Mood: moodScore,\n            Sleep: sleepScore,\n            TachesQuotidiennes: dailyTaskScore,\n            ExtraTaches: extraTaskScore,\n          }),\n        });\n      };\n  \n      saveScore();\n    };\n  \n    calculateTotalScore();\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n\n  return (\n    <div className=\"productivity-score\">\n      <h2>Productivity Score</h2>\n      <div className=\"score-ticket\">\n        <p>Mood : {moodScore}</p>\n        <p>Sleep : {sleepScore}</p>\n        <p>Taches quotidiennes : {dailyTaskScore}</p>\n        <p>Extra taches : {extraTaskScore}</p>\n        <hr />\n        <p>Score de productivit√© : {totalScore}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductivityScore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}