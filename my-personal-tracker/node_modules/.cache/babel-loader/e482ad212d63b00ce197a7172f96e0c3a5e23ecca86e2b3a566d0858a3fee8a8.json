{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/TaskTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TaskTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTracker = () => {\n  _s();\n  // Déclaration d'un état pour les tâches\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: '100 Pompes',\n    completed: false\n  }, {\n    id: 2,\n    text: 'Petit déjeuner',\n    completed: false\n  }, {\n    id: 3,\n    text: 'Méditation',\n    completed: false\n  }, {\n    id: 4,\n    text: 'Lecture',\n    completed: false\n  }, {\n    id: 5,\n    text: 'Étude',\n    completed: false\n  }, {\n    id: 6,\n    text: 'Exercice physique',\n    completed: false\n  }, {\n    id: 7,\n    text: 'Relaxation',\n    completed: false\n  }, {\n    id: 8,\n    text: 'Coucher tôt',\n    completed: false\n  }]);\n\n  // Fonction pour cocher/décocher une tâche\n  const toggleTask = id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => toggleTask(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), task.text]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTracker, \"2GvpSazR7+XIvz1Qx2vwnVOz/dk=\");\n_c = TaskTracker;\nexport default TaskTracker;\nvar _c;\n$RefreshReg$(_c, \"TaskTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskTracker","_s","tasks","setTasks","id","text","completed","toggleTask","updatedTasks","map","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/TaskTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './TaskTracker.css'; // Import du CSS pour les styles néon\n\nconst TaskTracker = () => {\n  // Déclaration d'un état pour les tâches\n  const [tasks, setTasks] = useState([\n    { id: 1, text: '100 Pompes', completed: false },\n    { id: 2, text: 'Petit déjeuner', completed: false },\n    { id: 3, text: 'Méditation', completed: false },\n    { id: 4, text: 'Lecture', completed: false },\n    { id: 5, text: 'Étude', completed: false },\n    { id: 6, text: 'Exercice physique', completed: false },\n    { id: 7, text: 'Relaxation', completed: false },\n    { id: 8, text: 'Coucher tôt', completed: false },\n  ]);\n\n  // Fonction pour cocher/décocher une tâche\n  const toggleTask = (id) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  };\n\n  return (\n    <div className=\"task-tracker\">\n      <h2>Daily To Do</h2>\n      {tasks.map((task) => (\n        <div key={task.id} className=\"task-item\">\n          <input\n            type=\"checkbox\"\n            checked={task.completed}\n            onChange={() => toggleTask(task.id)}\n          />\n          {task.text}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default TaskTracker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACtD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAM,CAAC,CACjD,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAIH,EAAE,IAAK;IACzB,MAAMI,YAAY,GAAGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,IAAI;MAAEJ,SAAS,EAAE,CAACI,IAAI,CAACJ;IAAU,CAAC,GAAGI,IAC7D,CAAC;IACDP,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBd,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdX,OAAA;MAAmBY,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCb,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,IAAI,CAACJ,SAAU;QACxBa,QAAQ,EAAEA,CAAA,KAAMZ,UAAU,CAACG,IAAI,CAACN,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDN,IAAI,CAACL,IAAI;IAAA,GANFK,IAAI,CAACN,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}