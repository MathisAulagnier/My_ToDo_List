{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SleepTracker = () => {\n  _s();\n  // États pour la qualité du sommeil\n  const [sleepQuality, setSleepQuality] = useState([{\n    id: 1,\n    text: 'Dormir comme un bébé',\n    selected: false\n  }, {\n    id: 2,\n    text: 'Sommeil profond',\n    selected: false\n  }, {\n    id: 3,\n    text: 'Sommeil fragmenté',\n    selected: false\n  }, {\n    id: 4,\n    text: 'Sommeil anxieux',\n    selected: false\n  }, {\n    id: 5,\n    text: 'Insomnie',\n    selected: false\n  }, {\n    id: 6,\n    text: 'Sommeil difficile',\n    selected: false\n  }, {\n    id: 7,\n    text: 'Nuit blanche',\n    selected: false\n  }, {\n    id: 8,\n    text: 'Sommeil agité',\n    selected: false\n  }]);\n\n  // Fonction pour sélectionner/désélectionner une qualité de sommeil\n  const toggleSleepQuality = id => {\n    const updatedSleepQuality = sleepQuality.map(sleep => sleep.id === id ? {\n      ...sleep,\n      selected: !sleep.selected\n    } : sleep);\n    setSleepQuality(updatedSleepQuality);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sleep-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sleep Quality\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), sleepQuality.map(sleep => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sleep-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: sleep.selected,\n        onChange: () => toggleSleepQuality(sleep.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), sleep.text]\n    }, sleep.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SleepTracker, \"UkDlyYmXVaLQ8+xmgIkm2QdoTSg=\");\n_c = SleepTracker;\nexport default SleepTracker;\nvar _c;\n$RefreshReg$(_c, \"SleepTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SleepTracker","_s","sleepQuality","setSleepQuality","id","text","selected","toggleSleepQuality","updatedSleepQuality","map","sleep","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/SleepTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './SleepTracker.css'; // Import du CSS pour les styles néon\n\nconst SleepTracker = () => {\n  // États pour la qualité du sommeil\n  const [sleepQuality, setSleepQuality] = useState([\n    { id: 1, text: 'Dormir comme un bébé', selected: false },\n    { id: 2, text: 'Sommeil profond', selected: false },\n    { id: 3, text: 'Sommeil fragmenté', selected: false },\n    { id: 4, text: 'Sommeil anxieux', selected: false },\n    { id: 5, text: 'Insomnie', selected: false },\n    { id: 6, text: 'Sommeil difficile', selected: false },\n    { id: 7, text: 'Nuit blanche', selected: false },\n    { id: 8, text: 'Sommeil agité', selected: false },\n  ]);\n\n  // Fonction pour sélectionner/désélectionner une qualité de sommeil\n  const toggleSleepQuality = (id) => {\n    const updatedSleepQuality = sleepQuality.map((sleep) =>\n      sleep.id === id ? { ...sleep, selected: !sleep.selected } : sleep\n    );\n    setSleepQuality(updatedSleepQuality);\n  };\n\n  return (\n    <div className=\"sleep-tracker\">\n      <h2>Sleep Quality</h2>\n      {sleepQuality.map((sleep) => (\n        <div key={sleep.id} className=\"sleep-item\">\n          <input\n            type=\"checkbox\"\n            checked={sleep.selected}\n            onChange={() => toggleSleepQuality(sleep.id)}\n          />\n          {sleep.text}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default SleepTracker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,CAC/C;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,sBAAsB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACxD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACnD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,UAAU;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,mBAAmB;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,cAAc;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAChD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,eAAe;IAAEC,QAAQ,EAAE;EAAM,CAAC,CAClD,CAAC;;EAEF;EACA,MAAMC,kBAAkB,GAAIH,EAAE,IAAK;IACjC,MAAMI,mBAAmB,GAAGN,YAAY,CAACO,GAAG,CAAEC,KAAK,IACjDA,KAAK,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,KAAK;MAAEJ,QAAQ,EAAE,CAACI,KAAK,CAACJ;IAAS,CAAC,GAAGI,KAC9D,CAAC;IACDP,eAAe,CAACK,mBAAmB,CAAC;EACtC,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5Bb,OAAA;MAAAa,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBd,YAAY,CAACO,GAAG,CAAEC,KAAK,iBACtBX,OAAA;MAAoBY,SAAS,EAAC,YAAY;MAAAC,QAAA,gBACxCb,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,KAAK,CAACJ,QAAS;QACxBa,QAAQ,EAAEA,CAAA,KAAMZ,kBAAkB,CAACG,KAAK,CAACN,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,EACDN,KAAK,CAACL,IAAI;IAAA,GANHK,KAAK,CAACN,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOb,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,YAAY;AAAAoB,EAAA,GAAZpB,YAAY;AAsClB,eAAeA,YAAY;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}