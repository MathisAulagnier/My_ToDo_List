{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductivityScore = () => {\n  _s();\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  const fetchMoodScore = async () => {\n    const response = await fetch('http://localhost:3001/api/moods');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayMood = data.find(entry => entry.Date === today);\n    setMoodScore(todayMood ? todayMood.Score : 0);\n  };\n  const fetchSleepScore = async () => {\n    const response = await fetch('http://localhost:3001/api/sleep');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todaySleep = data.find(entry => entry.Date === today);\n    setSleepScore(todaySleep ? todaySleep.Score : 0);\n  };\n  const fetchDailyTaskScore = async () => {\n    const response = await fetch('http://localhost:3001/api/daily-tasks');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayTasks = data.find(entry => entry.Date === today);\n    setDailyTaskScore(todayTasks ? todayTasks.Score : 0);\n  };\n  const fetchExtraTaskScore = async () => {\n    const response = await fetch('http://localhost:3001/api/extra-tasks');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayExtraTasks = data.find(entry => entry.Date === today);\n    setExtraTaskScore(todayExtraTasks ? todayExtraTasks.Score : 0);\n  };\n  const updateProductivityScore = async score => {\n    const today = new Date().toISOString().split('T')[0];\n    try {\n      const response = await fetch('http://localhost:3001/api/productivity-score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Date: today,\n          TotalScore: score\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du score de productivité');\n      }\n      console.log('Score de productivité mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du score de productivité:', error);\n    }\n  };\n  useEffect(() => {\n    fetchMoodScore();\n    fetchSleepScore();\n    fetchDailyTaskScore();\n    fetchExtraTaskScore();\n  }, []);\n  useEffect(() => {\n    const newTotalScore = moodScore + sleepScore + dailyTaskScore + extraTaskScore;\n    setTotalScore(newTotalScore);\n    updateProductivityScore(newTotalScore);\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productivity Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-ticket\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mood : \", moodScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sleep : \", sleepScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Taches quotidiennes : \", dailyTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Extra taches : \", extraTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score de productivit\\xE9 : \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityScore, \"1qqpMCCNyCjc5kXwc7gemMa9oJQ=\");\n_c = ProductivityScore;\nexport default ProductivityScore;\nvar _c;\n$RefreshReg$(_c, \"ProductivityScore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductivityScore","_s","moodScore","setMoodScore","sleepScore","setSleepScore","dailyTaskScore","setDailyTaskScore","extraTaskScore","setExtraTaskScore","totalScore","setTotalScore","fetchMoodScore","response","fetch","data","json","today","Date","toISOString","split","todayMood","find","entry","Score","fetchSleepScore","todaySleep","fetchDailyTaskScore","todayTasks","fetchExtraTaskScore","todayExtraTasks","updateProductivityScore","score","method","headers","body","JSON","stringify","TotalScore","ok","Error","console","log","error","newTotalScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\n\nconst ProductivityScore = () => {\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n\n  const fetchMoodScore = async () => {\n    const response = await fetch('http://localhost:3001/api/moods');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayMood = data.find(entry => entry.Date === today);\n    setMoodScore(todayMood ? todayMood.Score : 0);\n  };\n\n  const fetchSleepScore = async () => {\n    const response = await fetch('http://localhost:3001/api/sleep');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todaySleep = data.find(entry => entry.Date === today);\n    setSleepScore(todaySleep ? todaySleep.Score : 0);\n  };\n\n  const fetchDailyTaskScore = async () => {\n    const response = await fetch('http://localhost:3001/api/daily-tasks');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayTasks = data.find(entry => entry.Date === today);\n    setDailyTaskScore(todayTasks ? todayTasks.Score : 0);\n  };\n\n  const fetchExtraTaskScore = async () => {\n    const response = await fetch('http://localhost:3001/api/extra-tasks');\n    const data = await response.json();\n    const today = new Date().toISOString().split('T')[0];\n    const todayExtraTasks = data.find(entry => entry.Date === today);\n    setExtraTaskScore(todayExtraTasks ? todayExtraTasks.Score : 0);\n  };\n\n  const updateProductivityScore = async (score) => {\n    const today = new Date().toISOString().split('T')[0];\n    try {\n      const response = await fetch('http://localhost:3001/api/productivity-score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          Date: today,\n          TotalScore: score,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du score de productivité');\n      }\n\n      console.log('Score de productivité mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du score de productivité:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchMoodScore();\n    fetchSleepScore();\n    fetchDailyTaskScore();\n    fetchExtraTaskScore();\n  }, []);\n\n  useEffect(() => {\n    const newTotalScore = moodScore + sleepScore + dailyTaskScore + extraTaskScore;\n    setTotalScore(newTotalScore);\n    updateProductivityScore(newTotalScore);\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n\n  return (\n    <div className=\"productivity-score\">\n      <h2>Productivity Score</h2>\n      <div className=\"score-ticket\">\n        <p>Mood : {moodScore}</p>\n        <p>Sleep : {sleepScore}</p>\n        <p>Taches quotidiennes : {dailyTaskScore}</p>\n        <p>Extra taches : {extraTaskScore}</p>\n        <hr />\n        <p>Score de productivité : {totalScore}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductivityScore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}