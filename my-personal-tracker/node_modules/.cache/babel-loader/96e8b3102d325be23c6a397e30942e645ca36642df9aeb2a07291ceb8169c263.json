{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductivityScore = () => {\n  _s();\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  useEffect(() => {\n    const fetchMoodScore = async () => {\n      const response = await fetch('http://localhost:3001/api/moods');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayMood = data.find(entry => entry.Date === today);\n      setMoodScore(todayMood ? todayMood.Score : 0);\n    };\n    const fetchSleepScore = async () => {\n      const response = await fetch('http://localhost:3001/api/sleep');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todaySleep = data.find(entry => entry.Date === today);\n      setSleepScore(todaySleep ? todaySleep.Score : 0);\n    };\n    const fetchDailyTaskScore = async () => {\n      const response = await fetch('http://localhost:3001/api/daily-tasks');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayTasks = data.find(entry => entry.Date === today);\n      setDailyTaskScore(todayTasks ? todayTasks.Score : 0);\n    };\n    const fetchExtraTaskScore = async () => {\n      const response = await fetch('http://localhost:3001/api/extra-tasks');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayExtraTasks = data.find(entry => entry.Date === today);\n      setExtraTaskScore(todayExtraTasks ? todayExtraTasks.Score : 0);\n    };\n    const calculateTotalScore = () => {\n      setTotalScore(moodScore + sleepScore + dailyTaskScore + extraTaskScore);\n    };\n    fetchMoodScore();\n    fetchSleepScore();\n    fetchDailyTaskScore();\n    fetchExtraTaskScore();\n    calculateTotalScore();\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productivity Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-ticket\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mood : \", moodScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sleep : \", sleepScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Taches quotidiennes : \", dailyTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Extra taches : \", extraTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score de productivit\\xE9 : \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityScore, \"gDujFrGgt4xgjuuUoRrc/DR1JyM=\");\n_c = ProductivityScore;\nexport default ProductivityScore;\nvar _c;\n$RefreshReg$(_c, \"ProductivityScore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductivityScore","_s","moodScore","setMoodScore","sleepScore","setSleepScore","dailyTaskScore","setDailyTaskScore","extraTaskScore","setExtraTaskScore","totalScore","setTotalScore","fetchMoodScore","response","fetch","data","json","today","Date","toISOString","split","todayMood","find","entry","Score","fetchSleepScore","todaySleep","fetchDailyTaskScore","todayTasks","fetchExtraTaskScore","todayExtraTasks","calculateTotalScore","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './ProductivityScore.css';\n\nconst ProductivityScore = () => {\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n\n  useEffect(() => {\n    const fetchMoodScore = async () => {\n      const response = await fetch('http://localhost:3001/api/moods');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayMood = data.find(entry => entry.Date === today);\n      setMoodScore(todayMood ? todayMood.Score : 0);\n    };\n\n    const fetchSleepScore = async () => {\n      const response = await fetch('http://localhost:3001/api/sleep');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todaySleep = data.find(entry => entry.Date === today);\n      setSleepScore(todaySleep ? todaySleep.Score : 0);\n    };\n\n    const fetchDailyTaskScore = async () => {\n      const response = await fetch('http://localhost:3001/api/daily-tasks');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayTasks = data.find(entry => entry.Date === today);\n      setDailyTaskScore(todayTasks ? todayTasks.Score : 0);\n    };\n\n    const fetchExtraTaskScore = async () => {\n      const response = await fetch('http://localhost:3001/api/extra-tasks');\n      const data = await response.json();\n      const today = new Date().toISOString().split('T')[0];\n      const todayExtraTasks = data.find(entry => entry.Date === today);\n      setExtraTaskScore(todayExtraTasks ? todayExtraTasks.Score : 0);\n    };\n\n    const calculateTotalScore = () => {\n      setTotalScore(moodScore + sleepScore + dailyTaskScore + extraTaskScore);\n    };\n\n    fetchMoodScore();\n    fetchSleepScore();\n    fetchDailyTaskScore();\n    fetchExtraTaskScore();\n    calculateTotalScore();\n  }, [moodScore, sleepScore, dailyTaskScore, extraTaskScore]);\n\n  return (\n    <div className=\"productivity-score\">\n      <h2>Productivity Score</h2>\n      <div className=\"score-ticket\">\n        <p>Mood : {moodScore}</p>\n        <p>Sleep : {sleepScore}</p>\n        <p>Taches quotidiennes : {dailyTaskScore}</p>\n        <p>Extra taches : {extraTaskScore}</p>\n        <hr />\n        <p>Score de productivit√© : {totalScore}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductivityScore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}