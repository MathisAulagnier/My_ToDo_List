{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/PunctualTask.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './PunctualTask.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PunctualTask = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    fetch('http://localhost:3001/api/punctual-tasks').then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      const currentDate = new Date().toISOString().split('T')[0];\n      const todayTasks = data.find(entry => entry.Date === currentDate);\n      setTasks(todayTasks ? todayTasks.ExtraTasks : []);\n    }).catch(error => console.error('Erreur de chargement des tâches ponctuelles :', error));\n  }, []);\n  const handleTaskCompletion = task => {\n    const updatedTasks = tasks.filter(t => t !== task);\n    setTasks(updatedTasks);\n    updateJsonFile(updatedTasks);\n  };\n  const updateJsonFile = updatedTasks => {\n    const currentDate = new Date().toISOString().split('T')[0];\n    fetch('http://localhost:3001/api/extra-tasks', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        Date: currentDate,\n        ExtraTasks: updatedTasks\n      })\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n      return response.text();\n    }).then(data => console.log('Mise à jour réussie :', data)).catch(error => console.error('Erreur lors de la mise à jour du fichier JSON :', error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"punctual-task neon-green\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Extra Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-p-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: () => handleTaskCompletion(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), task]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Aucune t\\xE2che suppl\\xE9mentaire pour aujourd'hui\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(PunctualTask, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = PunctualTask;\nexport default PunctualTask;\nvar _c;\n$RefreshReg$(_c, \"PunctualTask\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","PunctualTask","_s","tasks","setTasks","fetch","then","response","ok","Error","json","data","currentDate","Date","toISOString","split","todayTasks","find","entry","ExtraTasks","catch","error","console","handleTaskCompletion","task","updatedTasks","filter","t","updateJsonFile","method","headers","body","JSON","stringify","text","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","index","type","onChange","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/PunctualTask.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './PunctualTask.css';\n\nconst PunctualTask = () => {\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    fetch('http://localhost:3001/api/punctual-tasks')\n      .then((response) => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        const currentDate = new Date().toISOString().split('T')[0];\n        const todayTasks = data.find(entry => entry.Date === currentDate);\n        setTasks(todayTasks ? todayTasks.ExtraTasks : []);\n      })\n      .catch((error) => console.error('Erreur de chargement des tâches ponctuelles :', error));\n  }, []);\n\n  const handleTaskCompletion = (task) => {\n    const updatedTasks = tasks.filter((t) => t !== task);\n    setTasks(updatedTasks);\n\n    updateJsonFile(updatedTasks);\n  };\n\n  const updateJsonFile = (updatedTasks) => {\n    const currentDate = new Date().toISOString().split('T')[0];\n    fetch('http://localhost:3001/api/extra-tasks', {\n      method: 'POST', \n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        Date: currentDate,\n        ExtraTasks: updatedTasks\n      }),\n    })\n    .then(response => {\n      if (!response.ok) {\n        throw new Error('Failed to update tasks');\n      }\n      return response.text();\n    })\n    .then(data => console.log('Mise à jour réussie :', data))\n    .catch((error) => console.error('Erreur lors de la mise à jour du fichier JSON :', error));\n  };\n\n  return (\n    <div className=\"punctual-task neon-green\">\n      <h2>Extra Tasks</h2>\n      {tasks.length > 0 ? tasks.map((task, index) => (\n        <div key={index} className=\"task-p-item\">\n          <input\n            type=\"checkbox\"\n            onChange={() => handleTaskCompletion(task)}\n          />\n          {task}\n        </div>\n      )) : <p>Aucune tâche supplémentaire pour aujourd'hui</p>}\n    </div>\n  );\n};\n\nexport default PunctualTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}