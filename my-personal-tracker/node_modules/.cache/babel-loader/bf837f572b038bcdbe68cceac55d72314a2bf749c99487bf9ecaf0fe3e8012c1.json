{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/TaskTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './TaskTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskTracker = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: '100 pompes',\n    completed: false\n  }, {\n    id: 2,\n    text: 'Séance de sport',\n    completed: false\n  }, {\n    id: 3,\n    text: 'Prendre des nouvelles',\n    completed: false\n  }, {\n    id: 4,\n    text: 'Etudier',\n    completed: false\n  }, {\n    id: 5,\n    text: 'Projet Personnel',\n    completed: false\n  }, {\n    id: 6,\n    text: 'Manger équilibré',\n    completed: false\n  }, {\n    id: 7,\n    text: 'Lire 30min',\n    completed: false\n  }, {\n    id: 8,\n    text: 'Echecs',\n    completed: false\n  }, {\n    id: 9,\n    text: 'Temps d\\'écran < 3 heures',\n    completed: false\n  }, {\n    id: 10,\n    text: 'Apprendre quelque chose de nouveau',\n    completed: false\n  }]);\n  const formatDate = date => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n    return `${year}-${month}-${day}`;\n  };\n  const toggleTask = useCallback(id => {\n    const updatedTasks = tasks.map(task => task.id === id ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  }, [tasks]);\n  const validateTasks = async () => {\n    const completedTasks = tasks.filter(task => task.completed).map(task => task.text);\n    const currentDate = formatDate(new Date());\n    try {\n      const response = await fetch('http://localhost:3001/api/daily-tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Tasks: completedTasks\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du DailyTaskTracker');\n      }\n      alert('DailyTaskTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du DailyTaskTracker:', error);\n      alert('Erreur lors de la mise à jour du DailyTaskTracker');\n    }\n  };\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const currentDate = formatDate(new Date());\n      try {\n        const response = await fetch('http://localhost:3001/api/daily-tasks');\n        const data = await response.json();\n\n        // Vérifiez si les données sont définies et si la date actuelle est présente\n        if (Array.isArray(data)) {\n          const todaysTasks = data.find(entry => entry.Date === currentDate);\n          if (todaysTasks) {\n            const updatedTasks = tasks.map(task => ({\n              ...task,\n              completed: todaysTasks.Tasks.includes(task.text)\n            }));\n            setTasks(updatedTasks);\n          }\n        } else {\n          console.warn('Les données reçues ne sont pas au format attendu.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des tâches:', error);\n      }\n    };\n    fetchTasks();\n  }, []); // Notez que je n'ai pas inclus `tasks` dans la liste de dépendances\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Daily To Do\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), tasks.map(task => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: task.completed,\n        onChange: () => toggleTask(task.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), task.text]\n    }, task.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: validateTasks,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskTracker, \"LLW0O1Y+QINnPLMY/Jer24VYpbs=\");\n_c = TaskTracker;\nexport default TaskTracker;\nvar _c;\n$RefreshReg$(_c, \"TaskTracker\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","TaskTracker","_s","tasks","setTasks","id","text","completed","formatDate","date","d","Date","day","getDate","month","getMonth","year","getFullYear","toggleTask","updatedTasks","map","task","validateTasks","completedTasks","filter","currentDate","response","fetch","method","headers","body","JSON","stringify","Tasks","ok","Error","alert","error","console","fetchTasks","data","json","Array","isArray","todaysTasks","find","entry","includes","warn","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/TaskTracker.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './TaskTracker.css'; // Import du CSS pour les styles néon\n\nconst TaskTracker = () => {\n  const [tasks, setTasks] = useState([\n    { id: 1, text: '100 pompes', completed: false },\n    { id: 2, text: 'Séance de sport', completed: false },\n    { id: 3, text: 'Prendre des nouvelles', completed: false },\n    { id: 4, text: 'Etudier', completed: false },\n    { id: 5, text: 'Projet Personnel', completed: false },\n    { id: 6, text: 'Manger équilibré', completed: false },\n    { id: 7, text: 'Lire 30min', completed: false },\n    { id: 8, text: 'Echecs', completed: false },\n    { id: 9, text: 'Temps d\\'écran < 3 heures', completed: false },\n    { id: 10, text: 'Apprendre quelque chose de nouveau', completed: false },\n  ]);\n\n  const formatDate = (date) => {\n    const d = new Date(date);\n    let day = d.getDate();\n    let month = d.getMonth() + 1;\n    const year = d.getFullYear();\n\n    if (day < 10) day = '0' + day;\n    if (month < 10) month = '0' + month;\n\n    return `${year}-${month}-${day}`;\n  };\n\n  const toggleTask = useCallback((id) => {\n    const updatedTasks = tasks.map((task) =>\n      task.id === id ? { ...task, completed: !task.completed } : task\n    );\n    setTasks(updatedTasks);\n  }, [tasks]);\n\n  const validateTasks = async () => {\n    const completedTasks = tasks.filter(task => task.completed).map(task => task.text);\n    const currentDate = formatDate(new Date());\n\n    try {\n      const response = await fetch('http://localhost:3001/api/daily-tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          Date: currentDate,\n          Tasks: completedTasks,\n        }),\n      });\n\n      if (!response.ok) {\n        throw new Error('Erreur lors de la mise à jour du DailyTaskTracker');\n      }\n\n      alert('DailyTaskTracker mis à jour avec succès');\n    } catch (error) {\n      console.error('Erreur lors de la mise à jour du DailyTaskTracker:', error);\n      alert('Erreur lors de la mise à jour du DailyTaskTracker');\n    }\n  };\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const currentDate = formatDate(new Date());\n\n      try {\n        const response = await fetch('http://localhost:3001/api/daily-tasks');\n        const data = await response.json();\n\n        // Vérifiez si les données sont définies et si la date actuelle est présente\n        if (Array.isArray(data)) {\n          const todaysTasks = data.find(entry => entry.Date === currentDate);\n          if (todaysTasks) {\n            const updatedTasks = tasks.map(task => ({\n              ...task,\n              completed: todaysTasks.Tasks.includes(task.text),\n            }));\n            setTasks(updatedTasks);\n          }\n        } else {\n          console.warn('Les données reçues ne sont pas au format attendu.');\n        }\n      } catch (error) {\n        console.error('Erreur lors de la récupération des tâches:', error);\n      }\n    };\n\n    fetchTasks();\n  }, []); // Notez que je n'ai pas inclus `tasks` dans la liste de dépendances\n\n  return (\n    <div className=\"task-tracker\">\n      <h2>Daily To Do</h2>\n      {tasks.map((task) => (\n        <div key={task.id} className=\"task-item\">\n          <input\n            type=\"checkbox\"\n            checked={task.completed}\n            onChange={() => toggleTask(task.id)}\n          />\n          {task.text}\n        </div>\n      ))}\n      <button onClick={validateTasks}>Valider</button>\n    </div>\n  );\n};\n\nexport default TaskTracker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CACjC;IAAES,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,iBAAiB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACpD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC1D;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC5C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,kBAAkB;IAAEC,SAAS,EAAE;EAAM,CAAC,EACrD;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC/C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,2BAA2B;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC9D;IAAEF,EAAE,EAAE,EAAE;IAAEC,IAAI,EAAE,oCAAoC;IAAEC,SAAS,EAAE;EAAM,CAAC,CACzE,CAAC;EAEF,MAAMC,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,CAAC,GAAG,IAAIC,IAAI,CAACF,IAAI,CAAC;IACxB,IAAIG,GAAG,GAAGF,CAAC,CAACG,OAAO,CAAC,CAAC;IACrB,IAAIC,KAAK,GAAGJ,CAAC,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC;IAC5B,MAAMC,IAAI,GAAGN,CAAC,CAACO,WAAW,CAAC,CAAC;IAE5B,IAAIL,GAAG,GAAG,EAAE,EAAEA,GAAG,GAAG,GAAG,GAAGA,GAAG;IAC7B,IAAIE,KAAK,GAAG,EAAE,EAAEA,KAAK,GAAG,GAAG,GAAGA,KAAK;IAEnC,OAAO,GAAGE,IAAI,IAAIF,KAAK,IAAIF,GAAG,EAAE;EAClC,CAAC;EAED,MAAMM,UAAU,GAAGpB,WAAW,CAAEO,EAAE,IAAK;IACrC,MAAMc,YAAY,GAAGhB,KAAK,CAACiB,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAAChB,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGgB,IAAI;MAAEd,SAAS,EAAE,CAACc,IAAI,CAACd;IAAU,CAAC,GAAGc,IAC7D,CAAC;IACDjB,QAAQ,CAACe,YAAY,CAAC;EACxB,CAAC,EAAE,CAAChB,KAAK,CAAC,CAAC;EAEX,MAAMmB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,MAAMC,cAAc,GAAGpB,KAAK,CAACqB,MAAM,CAACH,IAAI,IAAIA,IAAI,CAACd,SAAS,CAAC,CAACa,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACf,IAAI,CAAC;IAClF,MAAMmB,WAAW,GAAGjB,UAAU,CAAC,IAAIG,IAAI,CAAC,CAAC,CAAC;IAE1C,IAAI;MACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;QACpEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBrB,IAAI,EAAEc,WAAW;UACjBQ,KAAK,EAAEV;QACT,CAAC;MACH,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACQ,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,mDAAmD,CAAC;MACtE;MAEAC,KAAK,CAAC,yCAAyC,CAAC;IAClD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oDAAoD,EAAEA,KAAK,CAAC;MAC1ED,KAAK,CAAC,mDAAmD,CAAC;IAC5D;EACF,CAAC;EAEDvC,SAAS,CAAC,MAAM;IACd,MAAM0C,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMd,WAAW,GAAGjB,UAAU,CAAC,IAAIG,IAAI,CAAC,CAAC,CAAC;MAE1C,IAAI;QACF,MAAMe,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;QACrE,MAAMa,IAAI,GAAG,MAAMd,QAAQ,CAACe,IAAI,CAAC,CAAC;;QAElC;QACA,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvB,MAAMI,WAAW,GAAGJ,IAAI,CAACK,IAAI,CAACC,KAAK,IAAIA,KAAK,CAACnC,IAAI,KAAKc,WAAW,CAAC;UAClE,IAAImB,WAAW,EAAE;YACf,MAAMzB,YAAY,GAAGhB,KAAK,CAACiB,GAAG,CAACC,IAAI,KAAK;cACtC,GAAGA,IAAI;cACPd,SAAS,EAAEqC,WAAW,CAACX,KAAK,CAACc,QAAQ,CAAC1B,IAAI,CAACf,IAAI;YACjD,CAAC,CAAC,CAAC;YACHF,QAAQ,CAACe,YAAY,CAAC;UACxB;QACF,CAAC,MAAM;UACLmB,OAAO,CAACU,IAAI,CAAC,mDAAmD,CAAC;QACnE;MACF,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEvC,OAAA;IAAKiD,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3BlD,OAAA;MAAAkD,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnBnD,KAAK,CAACiB,GAAG,CAAEC,IAAI,iBACdrB,OAAA;MAAmBiD,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtClD,OAAA;QACEuD,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEnC,IAAI,CAACd,SAAU;QACxBkD,QAAQ,EAAEA,CAAA,KAAMvC,UAAU,CAACG,IAAI,CAAChB,EAAE;MAAE;QAAA8C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDjC,IAAI,CAACf,IAAI;IAAA,GANFe,IAAI,CAAChB,EAAE;MAAA8C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC,eACFtD,OAAA;MAAQ0D,OAAO,EAAEpC,aAAc;MAAA4B,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEV,CAAC;AAACpD,EAAA,CAzGID,WAAW;AAAA0D,EAAA,GAAX1D,WAAW;AA2GjB,eAAeA,WAAW;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}