{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/MoodTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MoodTracker.css'; // Import du CSS pour les styles néon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoodTracker = () => {\n  _s();\n  // États pour les humeurs\n  const [moods, setMoods] = useState([{\n    id: 1,\n    text: 'Happy',\n    selected: false\n  }, {\n    id: 2,\n    text: 'Sad',\n    selected: false\n  }, {\n    id: 3,\n    text: 'Excited',\n    selected: false\n  }, {\n    id: 4,\n    text: 'Anxious',\n    selected: false\n  }, {\n    id: 5,\n    text: 'Relaxed',\n    selected: false\n  }, {\n    id: 6,\n    text: 'Tired',\n    selected: false\n  }, {\n    id: 7,\n    text: 'Angry',\n    selected: false\n  }, {\n    id: 8,\n    text: 'Content',\n    selected: false\n  }]);\n\n  // Fonction pour sélectionner/désélectionner une humeur\n  const toggleMood = id => {\n    const updatedMoods = moods.map(mood => mood.id === id ? {\n      ...mood,\n      selected: !mood.selected\n    } : mood);\n    setMoods(updatedMoods);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mood-tracker\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"How do you feel today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), moods.map(mood => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mood-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: mood.selected,\n        onChange: () => toggleMood(mood.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), mood.text]\n    }, mood.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MoodTracker, \"vRyFu64ZrTYSlPmQ96XqYJO2nAg=\");\n_c = MoodTracker;\nexport default MoodTracker;\nvar _c;\n$RefreshReg$(_c, \"MoodTracker\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MoodTracker","_s","moods","setMoods","id","text","selected","toggleMood","updatedMoods","map","mood","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/MoodTracker.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './MoodTracker.css'; // Import du CSS pour les styles néon\n\nconst MoodTracker = () => {\n  // États pour les humeurs\n  const [moods, setMoods] = useState([\n    { id: 1, text: 'Happy', selected: false },\n    { id: 2, text: 'Sad', selected: false },\n    { id: 3, text: 'Excited', selected: false },\n    { id: 4, text: 'Anxious', selected: false },\n    { id: 5, text: 'Relaxed', selected: false },\n    { id: 6, text: 'Tired', selected: false },\n    { id: 7, text: 'Angry', selected: false },\n    { id: 8, text: 'Content', selected: false },\n  ]);\n\n  // Fonction pour sélectionner/désélectionner une humeur\n  const toggleMood = (id) => {\n    const updatedMoods = moods.map((mood) =>\n      mood.id === id ? { ...mood, selected: !mood.selected } : mood\n    );\n    setMoods(updatedMoods);\n  };\n\n  return (\n    <div className=\"mood-tracker\">\n      <h2>How do you feel today?</h2>\n      {moods.map((mood) => (\n        <div key={mood.id} className=\"mood-item\">\n          <input\n            type=\"checkbox\"\n            checked={mood.selected}\n            onChange={() => toggleMood(mood.id)}\n          />\n          {mood.text}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MoodTracker;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,mBAAmB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,KAAK;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACvC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAM,CAAC,EAC3C;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,OAAO;IAAEC,QAAQ,EAAE;EAAM,CAAC,EACzC;IAAEF,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,QAAQ,EAAE;EAAM,CAAC,CAC5C,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAIH,EAAE,IAAK;IACzB,MAAMI,YAAY,GAAGN,KAAK,CAACO,GAAG,CAAEC,IAAI,IAClCA,IAAI,CAACN,EAAE,KAAKA,EAAE,GAAG;MAAE,GAAGM,IAAI;MAAEJ,QAAQ,EAAE,CAACI,IAAI,CAACJ;IAAS,CAAC,GAAGI,IAC3D,CAAC;IACDP,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EAED,oBACET,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC9Bd,KAAK,CAACO,GAAG,CAAEC,IAAI,iBACdX,OAAA;MAAmBY,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACtCb,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAER,IAAI,CAACJ,QAAS;QACvBa,QAAQ,EAAEA,CAAA,KAAMZ,UAAU,CAACG,IAAI,CAACN,EAAE;MAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,EACDN,IAAI,CAACL,IAAI;IAAA,GANFK,IAAI,CAACN,EAAE;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOZ,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CApCID,WAAW;AAAAoB,EAAA,GAAXpB,WAAW;AAsCjB,eAAeA,WAAW;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}