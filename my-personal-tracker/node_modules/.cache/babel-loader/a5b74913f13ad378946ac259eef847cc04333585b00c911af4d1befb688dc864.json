{"ast":null,"code":"var _jsxFileName = \"/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductivityScore = () => {\n  _s();\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n  useEffect(() => {\n    const fetchScores = async () => {\n      const today = new Date().toISOString().split('T')[0];\n      const fetchMoodScore = async () => {\n        const response = await fetch('http://localhost:3001/api/moods');\n        const data = await response.json();\n        const todayMood = data.find(entry => entry.Date === today);\n        return todayMood ? todayMood.Score : 0;\n      };\n      const fetchSleepScore = async () => {\n        const response = await fetch('http://localhost:3001/api/sleep');\n        const data = await response.json();\n        const todaySleep = data.find(entry => entry.Date === today);\n        return todaySleep ? todaySleep.Score : 0;\n      };\n      const fetchDailyTaskScore = async () => {\n        const response = await fetch('http://localhost:3001/api/daily-tasks');\n        const data = await response.json();\n        const todayTasks = data.find(entry => entry.Date === today);\n        return todayTasks ? todayTasks.Score : 0;\n      };\n      const fetchExtraTaskScore = async () => {\n        const response = await fetch('http://localhost:3001/api/extra-tasks');\n        const data = await response.json();\n        const todayExtraTasks = data.find(entry => entry.Date === today);\n        return todayExtraTasks ? todayExtraTasks.Score : 0;\n      };\n      const mood = await fetchMoodScore();\n      const sleep = await fetchSleepScore();\n      const dailyTasks = await fetchDailyTaskScore();\n      const extraTasks = await fetchExtraTaskScore();\n      setMoodScore(mood);\n      setSleepScore(sleep);\n      setDailyTaskScore(dailyTasks);\n      setExtraTaskScore(extraTasks);\n      const total = mood + sleep + dailyTasks + extraTasks;\n      setTotalScore(total);\n      saveProductivityScore(mood, sleep, dailyTasks, extraTasks, total);\n    };\n    const saveProductivityScore = async (mood, sleep, dailyTasks, extraTasks, total) => {\n      const response = await fetch('http://localhost:3001/api/save-productivity-score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          moodScore: mood,\n          sleepScore: sleep,\n          dailyTaskScore: dailyTasks,\n          extraTaskScore: extraTasks,\n          totalScore: total\n        })\n      });\n      if (response.ok) {\n        console.log('Scores enregistrés avec succès !');\n      } else {\n        console.error('Erreur lors de l\\'enregistrement des scores.');\n      }\n    };\n    fetchScores();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"productivity-score\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Productivity Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-ticket\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Mood : \", moodScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Sleep : \", sleepScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"T\\xE2ches quotidiennes : \", dailyTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Extra t\\xE2ches : \", extraTaskScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score de productivit\\xE9 : \", totalScore]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(ProductivityScore, \"gDujFrGgt4xgjuuUoRrc/DR1JyM=\");\n_c = ProductivityScore;\nexport default ProductivityScore;\nvar _c;\n$RefreshReg$(_c, \"ProductivityScore\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ProductivityScore","_s","moodScore","setMoodScore","sleepScore","setSleepScore","dailyTaskScore","setDailyTaskScore","extraTaskScore","setExtraTaskScore","totalScore","setTotalScore","fetchScores","today","Date","toISOString","split","fetchMoodScore","response","fetch","data","json","todayMood","find","entry","Score","fetchSleepScore","todaySleep","fetchDailyTaskScore","todayTasks","fetchExtraTaskScore","todayExtraTasks","mood","sleep","dailyTasks","extraTasks","total","saveProductivityScore","method","headers","body","JSON","stringify","ok","console","log","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mathisaulagnier/My_ToDo_List/my-personal-tracker/src/components/ProductivityScore.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst ProductivityScore = () => {\n  const [moodScore, setMoodScore] = useState(0);\n  const [sleepScore, setSleepScore] = useState(0);\n  const [dailyTaskScore, setDailyTaskScore] = useState(0);\n  const [extraTaskScore, setExtraTaskScore] = useState(0);\n  const [totalScore, setTotalScore] = useState(0);\n\n  useEffect(() => {\n    const fetchScores = async () => {\n      const today = new Date().toISOString().split('T')[0];\n\n      const fetchMoodScore = async () => {\n        const response = await fetch('http://localhost:3001/api/moods');\n        const data = await response.json();\n        const todayMood = data.find(entry => entry.Date === today);\n        return todayMood ? todayMood.Score : 0;\n      };\n\n      const fetchSleepScore = async () => {\n        const response = await fetch('http://localhost:3001/api/sleep');\n        const data = await response.json();\n        const todaySleep = data.find(entry => entry.Date === today);\n        return todaySleep ? todaySleep.Score : 0;\n      };\n\n      const fetchDailyTaskScore = async () => {\n        const response = await fetch('http://localhost:3001/api/daily-tasks');\n        const data = await response.json();\n        const todayTasks = data.find(entry => entry.Date === today);\n        return todayTasks ? todayTasks.Score : 0;\n      };\n\n      const fetchExtraTaskScore = async () => {\n        const response = await fetch('http://localhost:3001/api/extra-tasks');\n        const data = await response.json();\n        const todayExtraTasks = data.find(entry => entry.Date === today);\n        return todayExtraTasks ? todayExtraTasks.Score : 0;\n      };\n\n      const mood = await fetchMoodScore();\n      const sleep = await fetchSleepScore();\n      const dailyTasks = await fetchDailyTaskScore();\n      const extraTasks = await fetchExtraTaskScore();\n\n      setMoodScore(mood);\n      setSleepScore(sleep);\n      setDailyTaskScore(dailyTasks);\n      setExtraTaskScore(extraTasks);\n\n      const total = mood + sleep + dailyTasks + extraTasks;\n      setTotalScore(total);\n\n      saveProductivityScore(mood, sleep, dailyTasks, extraTasks, total);\n    };\n\n    const saveProductivityScore = async (mood, sleep, dailyTasks, extraTasks, total) => {\n      const response = await fetch('http://localhost:3001/api/save-productivity-score', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          moodScore: mood,\n          sleepScore: sleep,\n          dailyTaskScore: dailyTasks,\n          extraTaskScore: extraTasks,\n          totalScore: total,\n        }),\n      });\n\n      if (response.ok) {\n        console.log('Scores enregistrés avec succès !');\n      } else {\n        console.error('Erreur lors de l\\'enregistrement des scores.');\n      }\n    };\n\n    fetchScores();\n  }, []);\n\n  return (\n    <div className=\"productivity-score\">\n      <h2>Productivity Score</h2>\n      <div className=\"score-ticket\">\n        <p>Mood : {moodScore}</p>\n        <p>Sleep : {sleepScore}</p>\n        <p>Tâches quotidiennes : {dailyTaskScore}</p>\n        <p>Extra tâches : {extraTaskScore}</p>\n        <hr />\n        <p>Score de productivité : {totalScore}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductivityScore;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}